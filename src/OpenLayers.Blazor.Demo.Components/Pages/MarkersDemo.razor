@page "/markersdemo"
@rendermode Components.RenderMode.DefaultRenderMode

<div class="card mt-2 mb-2">
    <div class="card-header">
        <h3 class="card-title">Markers</h3>
    </div>
    <div class="card-body">
        <select @bind="_selectedMarkerType">
            <option value="@MarkerType.MarkerPin">Pin</option>
            <option value="@MarkerType.MarkerAwesome">Awesome</option>
            <option value="@MarkerType.MarkerFlag">Flag</option>
            <option value="@MarkerType.MarkerCustomImage">Custom Image</option>
        </select>
        <button class="btn btn-primary" @onclick="() => _map.MarkersList.Clear()">Clear</button>
        <button class="btn btn-primary" @onclick="AddRandom">Add Random</button>
    </div>
</div>

<SwissMap @ref="_map" OnClick="OnMapClick" Style="height:800px;" Class="card" AutoPopup>
    <Popup>
        <div id="popup" class="ol-box">
            @if (context is Marker marker)
            {
                <h3>@marker.Title</h3>
                <p>@marker.Coordinate</p>
            }
        </div>
    </Popup>
    <Features>
        <Marker Type="MarkerType.MarkerPin" Coordinate="new Coordinate(2604200, 1197650)"></Marker>
        <Marker Type="MarkerType.MarkerFlag" Coordinate="new Coordinate(2624200, 1177650)" Title="Hallo" BackgroundColor="#449933" Popup></Marker>
     </Features>
 </SwissMap>
 
 <CodeView Source="MarkersDemo.razor" />

 @code {
    private SwissMap _map = null!;
    private MarkerType _selectedMarkerType;

    private async Task OnMapClick(Coordinate coordinate)
    {
        _map.MarkersList.Clear();

        switch (_selectedMarkerType)
        {
            case MarkerType.MarkerPin:
            case MarkerType.MarkerFlag:
                _map.MarkersList.Add(new Marker(_selectedMarkerType, coordinate, DateTime.Now.ToShortTimeString()));
                break;
            case MarkerType.MarkerAwesome:
                _map.MarkersList.Add(new Marker(coordinate, '\uf0f4'));
                break;
            case MarkerType.MarkerCustomImage:
                _map.MarkersList.Add(new Marker(coordinate, "_content/OpenLayers.Blazor.Demo.Components/pin.png", 414, 602, 414, 602) { Scale = 0.1, Popup = true, Title = "Custom Pin" });
                break;
        }
    }

    private async Task AddRandom()
    {
        var random = new Random((int)DateTime.Now.Ticks);
        var extent = _map.LayersList[0].Extent;
        for (var i = 0; i < 20; i++)
        {
            _map.MarkersList.Add(
                new Marker(MarkerType.MarkerPin, new Coordinate(random.NextDouble() * (extent[2] - extent[0]) + extent[0], random.NextDouble() * (extent[3] - extent[1]) + extent[1])));
        }
    }
}