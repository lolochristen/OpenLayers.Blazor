@page "/shapesdemo"
@rendermode Components.RenderMode.DefaultRenderMode
@using System.Text.Json

<div class="card mt-2 mb-2">
    <div class="card-header">
        <h3 class="card-title">ShapesDemo</h3>
    </div>
    <div class="card-body">
        <p>
            <code>@_featureInfo</code>
        </p>
    </div>
</div>

<SwissMap @ref="_map" OnClick="OnMapClicked" OnFeatureClick="OnFeatureClicked" Style="height:800px;" Class="card">
    <Features>
        <Line Points="new []{new Coordinate(1197650, 2604200), new Coordinate(1177650, 2624200)}" BorderColor="cyan" BorderSize="4"></Line>
        <Circle Center="new Coordinate(1197279.0774135895, 2770557.824138796)" Radius="5000" BackgroundColor="#2222AA66"></Circle>
        <Point Coordinate="new Coordinate(1197650, 2604200)" BorderSize="4" BorderColor="red" BackgroundColor="cyan" Radius="3"></Point>
    </Features>
</SwissMap>

<CodeView Source="ShapesDemo.razor"/>

@code {
    private SwissMap _map = null!;
    private string _featureInfo;

    private void OnFeatureClicked(Feature feature)
    {
        _featureInfo = JsonSerializer.Serialize(feature);
    }

    private void OnMapClicked(Coordinate coordinate)
    {
        _map.ShapesList.Add(new Circle(coordinate, 3) { BackgroundColor = "cyan" });
    }

}