@page "/"
@using System.Diagnostics
@using System.Text.Json
@using System.Text.Json.Nodes
@using System.Xml.Linq

<h1>OpenLayers.Blazor Demo/Examples</h1>
<h5>Coordinates in VL95/EPSG:2056</h5>

<div class="m-2">
    <button class="btn btn-primary" @onclick="CenterLocation">Center to current location</button>
    <button class="btn btn-primary" @onclick="AddMarkLocation">Add Mark at current location</button>
    <button class="btn btn-primary" @onclick="SetVisibleExtent">Beautiful</button>
    <input type="range" min="1" max="15" @bind-value="_zoom"> <code>@_zoom</code>
    <p>
        <code>Center:@_map?.Center</code><br/>
        <code>Last Position: @_lastPosition?.X / @_lastPosition?.Y</code><br/>
        <code>Altitude @(_altitude)m</code><br />
        <code>Mouse Position: @_mousePosition?.X / @_mousePosition?.Y</code><br/>
        <code>Visible Extent: @_map?.VisibleExtent</code>
    </p>
</div>

<div class="container">

    <SwissMap @ref="_map" OnClick="OnMapClick" OnPointerMove="OnPointerMove" @bind-Zoom="_zoom" Style="border:1px solid silver;height:800px;">
        <Popup>
            <div id="popup" class="ol-box">
                @if (context is Marker marker)
                {
                    <h3>@marker.Title</h3>
                    <p>@marker.Coordinate.X / @marker.Coordinate.Y</p>
                }
            </div>
        </Popup>
        <Features>
            <Marker Type="MarkerType.MarkerPin" Coordinate="new Coordinate(1197650, 2604200)"></Marker>
            <Marker Type="MarkerType.MarkerFlag" Coordinate="new Coordinate(1177650, 2624200)" Title="Hallo" BackgroundColor="#449933" Popup></Marker>
            <Line Points="new []{new Coordinate(1197650, 2604200), new Coordinate(1177650, 2624200)}" BorderColor="cyan"></Line>
        </Features>
    </SwissMap>
</div>

<CodeView Source="Index.razor" />

@code {
    private SwissMap _map = null!;
    private Coordinate? _mousePosition;
    private double _zoom = 2;
    private decimal _altitude;
    private Coordinate? _lastPosition;
    [Inject] HttpClient HttpClient { get; set; }

    private async Task OnMapClick(Coordinate coordinate)
    {
        _lastPosition = coordinate;
        await GetAltitude(coordinate);
    }

    private void OnPointerMove(Coordinate coordinate)
    {
        _mousePosition = coordinate;
    }

    private async Task CenterLocation()
    {
        await _map.CenterToCurrentGeoLocation();
    }

    private async Task AddMarkLocation()
    {
        var coord = await _map.GetCurrentGeoLocation();
        _map.MarkersList.Add(new Marker { Type = MarkerType.MarkerPin, Coordinate = coord });
    }

    private async Task GetAltitude(Coordinate coordinate)
    {
        var result = await HttpClient.GetAsync($"https://api3.geo.admin.ch/rest/services/height?easting={coordinate.X}&elevation_model=COMB&northing={coordinate.Y}&sr=2056");
        var heightDoc = await JsonDocument.ParseAsync(await result.Content.ReadAsStreamAsync());
        _altitude = Decimal.Parse(heightDoc.RootElement.GetProperty("height").GetString());
    }

    private async Task SetVisibleExtent()
    {
        await _map.SetVisibleExtent(new Extent(2766546.266902437,1180272.9274316968,2774559.233529014,1186045.3471649496));
    }
}
