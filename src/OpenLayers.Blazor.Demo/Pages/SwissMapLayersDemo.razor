@page "/swissmaplayersdemo"
@using System.Xml.Linq

<h3>SwissMapLayersDemo</h3>

<div class="m-2">
    <select @bind="_selectedLayer">
        @if (_layerList != null)
        {
            @foreach (var layer in _layerList)
            {
                <option value="@layer.Key">@layer.Title (@layer.Key)</option>
            }
        }
    </select>
    <button class="btn btn-primary" @onclick="AddSelectedLayer">Add Layer</button>
</div>

<div class="container">
    <SwissMap @ref="_map" Style="border:1px solid silver;height:800px;"></SwissMap>
</div>

<CodeView Source="SwissMapLayersDemo.razor"/>

@code {
    private SwissMap _map = null!;
    private IDictionary<string, string>? _layerIds;
    private string? _selectedLayer;
    private List<Layer>? _layerList;

    [Inject]
    private HttpClient HttpClient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadSwissGeoLayersIds();
    }

    private async Task LoadSwissGeoLayersIds()
    {
        var stream = await HttpClient.GetStreamAsync("https://wms.geo.admin.ch/?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetCapabilities");
        var xdoc = await XDocument.LoadAsync(stream, LoadOptions.None, CancellationToken.None);
        var ns = xdoc.Root.GetDefaultNamespace();
        var layers = xdoc.Root.Element(ns + "Capability").Elements(ns + "Layer").Elements(ns + "Layer");


        _layerList = layers.Select(p =>
        {
            var layer = new Layer
            {
                SourceType = SourceType.TileWMS,
                Opacity = .7,
                Url = $"https://wms.geo.admin.ch/?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetMap&FORMAT=image%2Fpng&TRANSPARENT=true&LAYERS={p.Element(ns + "Name").Value}&LANG=en",
                Format = "image/png",
                Key = p.Element(ns + "Name").Value,
                Title = p.Element(ns + "Title").Value,
            };
            layer.SourceParameters["Abstract"] = p.Element(ns + "Abstract").Value;
            return layer;
        }).OrderBy(p => p.Title).ToList();
    }

    private void AddSelectedLayer()
    {
        if (_map.LayersList.Count > 1)
            _map.LayersList.RemoveAt(1);

        _map.LayersList.Add(_layerList.First(p => p.Key == _selectedLayer));
    }
}